1. SELECT * from ksiazki order by ksiazki.nazwiskoautora; - wszystkie info z ksiazek wg nazwiska autora
2. SELECT imieautora, nazwiskoautora, tytul, cena FROM `ksiazki` ORDER by cena desc; - wszystko oprocz id malejaco wg ceny
3. SELECT idksiazki as `ID książki`, imieautora as `Imię autora`, nazwiskoautora as `Nazwisko autora`, tytul as `tytuł książki`, cena as `Cena` FROM `ksiazki`;
4. SELECT * from zamowienia where status like "wyslano";

lub

4. select zamowienia.idzamowienia, zamowienia.data, 
klienci.imie, klienci.nazwisko,
ksiazki.tytul
from zamowienia join klienci
on zamowienia.idklienta=klienci.idklienta
join ksiazki on zamowienia.idksiazki=ksiazki.idksiazki  
where zamowienia.status="wyslano";

5. SELECT * from zamowienia where data BETWEEN "2021-08-01" and "2021-09-30";
6. SELECT * from klienci where nazwisko like "Brodka";
7. SELECT * from ksiazki where tytul like "%php%" or tytul like "%frontend%";
12. SELECT tytul, imieautora,nazwiskoautora, miejscowosc from klienci join zamowienia on klienci.idklienta=zamowienia.idklienta join ksiazki on zamowienia.idksiazki=ksiazki.idksiazki where klienci.miejscowosc="Katowice";

-natural joina uzywamy tylko wtedy jak klucz glowny i obcy tak samo sie nazywa w tabelach, czyli kiedy klucze nazywaja sie dokladnie tak samo-

18. select tytul, MIN(cena) from ksiazki where(1); - najtansza ksiazka

tabela łącznikowa - nie musi mieć id, łączy inne klucze


23. update ksiazki 
SET ksiazki.cena = ksiazki.cena * 1.15
WHERE
ksiazki.tytul
like "%PHP%";

update ksiazki 
SET ksiazki.cena = round(ksiazki.cena * 1.15, 2)
WHERE
ksiazki.tytul
like "%PHP%";

25. alter table klienci 
add email varchar(255);

15.	Wyświetl wszystkie informacje o zamówieniach dokonanych przez klienta o nazwisku „Jankowska” ułożone wg daty od najpóźniej dokonanych (imię i nazwisko osoby zamawiającej, id, data i status zamówienia, tytuł zamówionej książki).

27.   Usuń z bazy Andrzeja D
delete "Andrzej D." from database (?)



13. Wyświetl wszystkie informacje o zamówieniach dokonanych przez wszystkich klientów (imię i nazwisko osoby zamawiającej, id, data i status zamówienia, tytuł zamówionej książki).
SELECT zamowienia.status, zamowienia.data, ksiazki.tytul, klienci.imie, klienci.nazwisko, klienci.idklienta from zamowienia join klienci on klienci.idklienta=zamowienia.idklienta join ksiazki on ksiazki.idksiazki=zamowienia.idksiazki;

14. select klienci.imie, klienci.nazwisko, klienci.idklienta, zamowienia.data, zamowienia.status, ksiazki.tytul from klienci join zamowienia on zamowienia.idklienta=klienci.idklienta join ksiazki on ksiazki.idksiazki=zamowienia.idksiazki WHERE klienci.nazwisko like "Rutkowski" or klienci.nazwisko like "Brodka";
16. select AVG(ksiazki.cena) from ksiazki;
17. 



19. select klienci.imie, klienci.nazwisko from klienci where klienci.idklienta IN (select zamowienia.idklienta from zamowienia GROUP BY idklienta HAVING count(zamowienia.idklienta)=1);

21. select klienci.imie, klienci.nazwisko 
from klienci 
left join zamowienia on klienci.idklienta=zamowienia.idklienta
where zamowienia.idzamowienia is NULL;

lub 

select klienci.imie, klienci.nazwisko
from klienci WHERE klienci.idklienta not IN(
    SELECT zamowienia.idklienta from zamowienia
    );


17. select klienci.imie, klienci.nazwisko, COUNT(zamowienia.idklienta) from klienci
join zamowienia on zamowienia.idklienta=klienci.idklienta group by klienci.imie, klienci.nazwisko;


24. UPDATE zamowienia set zamowienia.status="wysłano" where year(zamowienia.data)=2021;
